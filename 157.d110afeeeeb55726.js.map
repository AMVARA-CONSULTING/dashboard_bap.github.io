{"version":3,"file":"157.d110afeeeeb55726.js","mappings":"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","names":["swipeAnimation","trigger","transition","query","style","overflow","optional","group","transform","animate","left","i0","ctx_r8","oxw","GraphicComponent","constructor","_data","config","router","route","this","window","pp_graphic","ngOnChanges","changes","zoneKeys","myYear","year","currentValue","zones","data","filter","item","reduce","r","a","push","zone","maxReserve","title","language","actual","parseInt","sumByIndex","previous","reserve","rows","classifyByIndex","productionProgramData","tActual","maxTotal","percent1","percent2","percent3","percentActual","toString","toFixed","percentPrevious","percentReserve","Object","keys","barsWidth","length","setTimeout","ready","goZone","ZoneID","navigate","relativeTo","replaceUrl","selectors","opacity","stagger","ctx_r4","ctx_r20","ctx_r23","ProductionProgramMainComponent","api","translate","setTitle","appTitle","instant","ngOnInit","paramMap","subscribe","params","get","getSavedReportData","ReportTypes","res","plandate","getPlanDateWithMoment","moment","rollupData","getKeysCount","rowsGroupsGlobal","changeYear","years","localStorage","setItem","main_route","byYear","yearCache","getItem","main_route_slash","indexOf","dat","rowsGroupsDetail","resultsCount","general_route","goPlant","PlantID","second_level_route","ctx","$event","state","WrapperComponent","getLevel","currentLevel","outlet","activatedRouteData","level","DipQuadroCircularMetersComponent","setCustomer","value","customer","isNaN","Math","abs","clockwise_customer","setPlan","plan","clockwise_plan","setTotal","total","clockwise_total","setReserve","clockwise_reserve","ctx_r9","ctx_r13","ctx_r18","ctx_r11","ctx_r15","ctx_r21","ctx_r27","ctx_r33","routes","path","component","children","activatedRoute","type","id","P","tmp","err","zoneRows","plantRows","groupInfo","rowsPlain","zoneID","plantID","totalCustomer","totalPlan","totalTotal","totalTotalDiff","totalReserve","zoneTitle","plantTitle","zoneCustomer","zonePlan","zoneTotal","zoneTotalDiff","zoneReserve","plantCustomer","plantPlan","plantTotal","plantTotalDiff","plantReserve","regions","products","regionKeys","sort","productKeys","progress1Value","progress2Value","progress3Value","progress4Value","progress1","percent","progress2","progress3","progress4","part","return","forward","lastTap2","sub_level_a","key","sub_level_b","goProduct","ProductID","lastTap","encodeURI","goRegion","RegionID","ProductionProgramLvl2Component","pp3","type2","region_id","decodeURI","goForProduct","goForRegion","reducedIndexForZoneLevel","reducedSelector","productsPlain","regionsPlain","returnToMain","ProductionProgramLvl3Component","ProductionProgramModule","CommonModule","SharedModule","RouterModule","sign","comma","ToNumberFn","ultimate","round","m","toLocaleString","h","replace","NumberPipe","pure","__decorate","SelectSnapshot","ConfigState"],"sourceRoot":"webpack:///","sources":["./src/app/app.transitions.ts","./src/app/modules/production-program/components/graphic/graphic.component.html","./src/app/modules/production-program/components/graphic/graphic.component.ts","./src/app/modules/production-program/components/production-program-main/production-program-main.component.html","./src/app/modules/production-program/components/production-program-main/production-program-main.component.ts","./src/app/modules/production-program/components/wrapper/wrapper.component.ts","./src/app/modules/production-program/components/wrapper/wrapper.component.html","./src/app/components/quadro-circular-meters/quadro-circular-meters.component.ts","./src/app/components/quadro-circular-meters/quadro-circular-meters.component.html","./src/app/modules/production-program/components/production-program-lvl2/production-program-lvl2.component.html","./src/app/modules/production-program/components/production-program-lvl3/production-program-lvl3.component.html","./src/app/modules/production-program/production-program.module.ts","./src/app/modules/production-program/components/production-program-lvl2/production-program-lvl2.component.ts","./src/app/modules/production-program/components/production-program-lvl3/production-program-lvl3.component.ts","./src/app/pipes/number.pipe.ts"],"sourcesContent":["import { trigger, transition, query, style, group, animate } from '@angular/animations';\n\nexport const swipeAnimation =  trigger('routerTransition', [\n    transition(':increment', [\n      query(':enter, :leave', style({ overflow: 'hidden' })\n        , { optional: true }),\n      group([\n        query(':enter', [\n          style({ transform: 'translateX(100%)' }),\n          animate('0.5s ease-in-out', style({ transform: 'translateX(0%)' }))\n        ], { optional: true }),\n        query(':leave', [\n          style({ transform: 'translateX(0%)' }),\n          animate('0.5s ease-in-out', style({ transform: 'translateX(-100%)' }))\n        ], { optional: true }),\n      ])\n    ]),\n    transition(':decrement', [\n      query(':enter, :leave', style({ overflow: 'hidden' })\n        , { optional: true }),\n      group([\n        query(':enter', [\n          style({ transform: 'translateX(-100%)' }),\n          animate('0.5s ease-in-out', style({ transform: 'translateX(0%)' }))\n        ], { optional: true }),\n        query(':leave', [\n          style({ transform: 'translateX(0%)' }),\n          animate('0.5s ease-in-out', style({ left: 0, transform: 'translateX(100%)' }))\n        ], { optional: true }),\n      ])\n    ]),\n  ])","<div class=\"wrapper\" [@list]=\"zoneKeys.length\">\n  <div class=\"zone\" (click)=\"goZone(zoneKey)\" *ngFor=\"let zoneKey of zoneKeys\" [style.width.%]=\"barsWidth\">\n    <div class=\"bars\">\n      <div style=\"position: relative; height: 100%;\">\n        <div [ngClass]=\"{zero: !ready}\" class=\"previous\" [style.height.%]=\"zones[zoneKey].percentPrevious\">\n          <div class=\"value\" *ngIf=\"!(_data.mobile$ | async)\">{{ (_data.sumByIndex(rows[zoneKey], 17) | toNumber) }}</div>\n        </div>\n        <div [ngClass]=\"{zero: !ready}\" class=\"actual\" [style.height.%]=\"zones[zoneKey].percentActual\">\n          <div class=\"value\" *ngIf=\"!(_data.mobile$ | async)\">{{ (_data.sumByIndex(rows[zoneKey], 15) | toNumber) }}</div>\n        </div>\n        <div [ngClass]=\"{zero: !ready}\" class=\"reserve\" [style.height.%]=\"zones[zoneKey].percentReserve\">\n          <div class=\"value\" *ngIf=\"!(_data.mobile$ | async)\">{{ (_data.sumByIndex(rows[zoneKey], 22) | toNumber) }}</div>\n        </div>\n      </div>\n    </div>\n    <div class=\"title\">{{ zones[zoneKey].title.trim() }}</div>\n  </div>\n</div>\n","import { Component, Input, SimpleChanges } from '@angular/core';\nimport { DataService } from '@services/data.service';\nimport { ConfigService } from '@services/config.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { trigger, transition, query, style, stagger, animate } from '@angular/animations';\n\n@Component({\n  selector: 'production-program-graphic',\n  templateUrl: './graphic.component.html',\n  styleUrls: ['./graphic.component.scss'],\n  animations: [\n    trigger('list', [\n      transition('* => *', [\n        query(':enter', style({ opacity: 0 }), { optional: true }),\n        query(':enter', stagger('200ms', animate('300ms ease-in', style({ opacity: 1 }))), { optional: true })\n      ])\n    ])\n  ]\n})\nexport class GraphicComponent {\n\n  constructor(\n    public _data: DataService,\n    private config: ConfigService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {\n    (window as any).pp_graphic = this;\n  }\n\n  ready: boolean = false\n\n  @Input() data: any[][]\n  @Input() year: string\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.zoneKeys = []\n    const myData = changes.data ? changes.data.currentValue : this.data\n    const myYear = changes.year ? changes.year.currentValue : this.year\n    let zones = myData.filter(item => item[13] == myYear).reduce((r,a) => {\n      r[a[0]] = r[a[0]] || []\n      r[a[0]].push(a)\n      return r\n    }, {})\n    this.zones = []\n    this.maxReserve = 0\n    for (var zone in zones) {\n      this.zones[zone] = {\n        title: zones[zone][0][(this.config.config.language == 'en' ? 1 : 2)],\n        actual: parseInt(this._data.sumByIndex(zones[zone], 15)),\n        previous: parseInt(this._data.sumByIndex(zones[zone], 17)),\n        reserve: parseInt(this._data.sumByIndex(zones[zone], 22))\n      }\n      if (this.zones[zone].reserve > this.maxReserve) this.maxReserve = this.zones[zone].reserve\n    }\n    this.rows = this._data.classifyByIndex(this._data.productionProgramData.filter(item => item[13] == myYear), 0)\n    let tActual = 0\n    for (var zone in this.zones) {\n      if (this.zones[zone].actual > tActual) tActual = this.zones[zone].actual\n      if (this.zones[zone].previous > tActual) tActual = this.zones[zone].previous\n      if (this.zones[zone].reserve > tActual) tActual = this.zones[zone].reserve\n    }\n    this.maxTotal = tActual\n    for (var zone in this.zones) {\n      let percent1 = (this.zones[zone].actual * 100) / tActual\n      let percent2 = (this.zones[zone].previous * 100) / tActual\n      let percent3 = (this.zones[zone].reserve * 100) / this.maxTotal\n      this.zones[zone].percentActual = (parseInt(percent1.toString()) == 0 ? 1 : percent1).toFixed(0)\n      this.zones[zone].percentPrevious = (parseInt(percent2.toString()) == 0 ? 1 : percent2).toFixed(0)\n      this.zones[zone].percentReserve = (parseInt(percent3.toString()) == 0 ? 1 : percent3).toFixed(0)\n    }\n    this.zoneKeys = Object.keys(this.zones)\n    this.barsWidth = 100 / Object.keys(this.zones).length\n    setTimeout(() => this.ready = true, 300)\n  }\n\n  goZone(ZoneID) : void {\n    this.router.navigate(['zone', ZoneID], { relativeTo: this.route, replaceUrl: true })\n  }\n\n  rows: any[][] = []\n\n  zones: any = {}\n  zoneKeys: string[] = []\n\n  maxTotal: number = 0\n  maxReserve: number = 0\n\n  barsWidth: number = 0\n\n}\n","<div class=\"report-header\">\n  <div class=\"data-header\">\n    <div class=\"empty\"></div>\n    <div class=\"report-date\">{{ 'plandate' | translate }}: {{ plandate }}</div>\n  </div>\n  <div class=\"overview\" [@overview]=\"ready\">\n    <div class=\"graphic\">\n      <production-program-graphic [year]=\"year\" [data]=\"data.productionProgramData\"></production-program-graphic>\n    </div>\n    <div class=\"simple\">\n      <div class=\"headers\">\n        <div class=\"empty\"></div>\n        <div class=\"customer\">KU</div>\n        <div class=\"plan\">PL</div>\n        <div class=\"reserve\">SR</div>\n      </div>\n      <div (click)=\"goZone(rowsGroupsGlobal[zone.key][0][0])\" class=\"overview-group\" *ngFor=\"let zone of rowsGroupsGlobal | keyvalue\">\n        <div class=\"empty\">{{ rowsGroupsGlobal[zone.key][0][(config.config.language == 'en' ? 1 : 2)].trim() }}</div>\n        <div class=\"customer\">{{ data.sumByIndex(rowsGroupsGlobal[zone.key], 15) | toNumber }}</div>\n        <div class=\"plan\">{{ data.sumByIndex(rowsGroupsGlobal[zone.key], 16) | toNumber }}</div>\n        <div class=\"reserve\">{{ data.sumByIndex(rowsGroupsGlobal[zone.key], 22) | toNumber }}</div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"wrapper\" [@list]=\"resultsCount\">\n  <header>\n    <div class=\"title\">\n      <!--<button (click)=\"changeYear(year, years)\" matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'change.year' | translate }}\" mat-button><mat-icon>today</mat-icon>{{ year }}</button>-->\n      <mat-form-field matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'change.year' | translate }}\" style=\"width: 70px; margin-left: 10px;\">\n        <mat-select ngDefaultControl [(ngModel)]=\"year\" (ngModelChange)=\"changeYear($event)\">\n          <mat-option *ngFor=\"let newYear of years\" [value]=\"newYear\">\n            {{ newYear }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"customer\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.customers' | translate }}\" style=\"display: inline-block;\">{{\n        'production_program.customer' | translate }}</div>\n    </div>\n    <div class=\"plan\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.plan' | translate }}\" style=\"display: inline-block;\">{{\n        'production_program.plan' | translate }}</div>\n    </div>\n    <div class=\"total\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.plan_unit' | translate }}\" style=\"display: inline-block;\">{{\n        'production_program.total' | translate }}</div>\n    </div>\n    <div class=\"reserve\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.reserved' | translate }}\" style=\"display: inline-block;\">\n        <span class=\"desktop\">{{ 'production_program.reserve' | translate }}</span>\n        <span class=\"mobile\">SR</span>\n      </div>\n    </div>\n  </header>\n  <div class=\"zone\" *ngFor=\"let zone of rowsGroupsGlobal | keyvalue\">\n    <div class=\"zone-header\" (click)=\"goZone(zone.key)\">\n      <div class=\"title\">{{ rowsGroupsGlobal[zone.key][0][(config.config.language == 'en' ? 1 : 2)].trim() }}</div>\n      <div class=\"customer\">{{ data.sumByIndex(rowsGroupsGlobal[zone.key], 15) | toNumber }}</div>\n      <div class=\"plan\">{{ data.sumByIndex(rowsGroupsGlobal[zone.key], 16) | toNumber }}</div>\n      <div class=\"total\">{{ data.sumByIndex(rowsGroupsGlobal[zone.key], 17) | toNumber }}<div *ngIf=\"data.sumByIndex(rowsGroupsGlobal[zone.key], 21) != 0\">{{\n          data.sumByIndex(rowsGroupsGlobal[zone.key], 21) | toNumber:true }}</div>\n      </div>\n      <div class=\"reserve\">{{ data.sumByIndex(rowsGroupsGlobal[zone.key], 22) | toNumber }}<div *ngIf=\"data.sumByIndex(rowsGroupsGlobal[zone.key], 24) != 0\">{{\n          data.sumByIndex(rowsGroupsGlobal[zone.key], 24) | toNumber:true }}</div>\n      </div>\n    </div>\n    <div class=\"plant\" (click)=\"goPlant(plant.key)\" *ngFor=\"let plant of rowsGroupsDetail[zone.key] | keyvalue\">\n      <div class=\"title\">{{ rowsGroupsDetail[zone.key][plant.key][0][(config.config.language == 'en' ? 7 : 6)].trim() }}</div>\n      <div class=\"customer\">{{ data.sumByIndex(rowsGroupsDetail[zone.key][plant.key], 15) | toNumber }}</div>\n      <div class=\"plan\">{{ data.sumByIndex(rowsGroupsDetail[zone.key][plant.key], 16) | toNumber }}</div>\n      <div class=\"total\">{{ data.sumByIndex(rowsGroupsDetail[zone.key][plant.key], 17) | toNumber }}<div *ngIf=\"data.sumByIndex(rowsGroupsDetail[zone.key][plant.key], 21) != 0\">{{\n          data.sumByIndex(rowsGroupsDetail[zone.key][plant.key], 21) | toNumber:true }}</div>\n      </div>\n      <div class=\"reserve\">{{ data.sumByIndex(rowsGroupsDetail[zone.key][plant.key], 22) | toNumber }}<div *ngIf=\"data.sumByIndex(rowsGroupsDetail[zone.key][plant.key], 24) != 0\">{{\n          data.sumByIndex(rowsGroupsDetail[zone.key][plant.key], 24) | toNumber:true }}</div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '@services/data.service';\nimport { ApiService } from '@services/api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfigService } from '@services/config.service';\nimport { trigger, state, style, transition, animate, query, stagger } from '@angular/animations';\nimport { Title } from '@angular/platform-browser';\nimport * as moment from 'moment';\nimport { ReportTypes } from '@other/interfaces';\nimport { TranslateService } from '@ngx-translate/core';\nimport { getPlanDateWithMoment } from '@other/functions';\n\n@Component({\n  selector: 'production-program-main',\n  templateUrl: './production-program-main.component.html',\n  styleUrls: ['./production-program-main.component.scss'],\n  animations: [\n    trigger('overview', [\n      state('false', style({\n        opacity: 0\n      })),\n      state('true', style({\n        opacity: 1\n      })),\n      transition('* <=> *', animate('1000ms ease-in-out', style({ opacity: 1 })))\n    ]),\n    trigger('list', [\n      transition('* => *', [\n        query('.zone:enter', style({ opacity: 0 }), { optional: true }),\n        query('.zone:enter', stagger('200ms', animate('300ms ease-in', style({ opacity: 1 }))), { optional: true })\n      ])\n    ])\n  ],\n  host: {\n    '(swiperight)': 'data.goFrom(\"production_program\", $event)',\n    '(swipeleft)': 'data.goFrom(\"production_program\", $event)'\n  }\n})\nexport class ProductionProgramMainComponent implements OnInit {\n\n  constructor(\n    public data: DataService,\n    private api: ApiService,\n    private route: ActivatedRoute,\n    private config: ConfigService,\n    private router: Router,\n    private translate: TranslateService,\n    private title: Title\n  ) {\n    this.title.setTitle(this.config.config.appTitle + ' - ' + this.translate.instant('menu.production_program'))\n  }\n\n  year: string = ''\n\n  plandate: string = ''\n\n  // Names of the routes for each level\n  main_route: string = 'employees'\n  main_route_slash: string = '/employees'\n  general_route: string = 'zone'\n  second_level_route: string = 'region'\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.year = params.get('year')\n      // If no Production rows were found, get them\n      if (this.data.productionProgramData.length === 0) {\n        this.api.getSavedReportData(ReportTypes.ProductionProgram).subscribe(res => {\n          this.plandate = getPlanDateWithMoment(res[0][14], moment);\n          this.data.productionProgramData = res;\n          this.rollupData()\n        })\n      } else {\n        this.plandate = getPlanDateWithMoment(this.data.productionProgramData[0][14], moment)\n        this.rollupData()\n      }\n    })\n  }\n\n  resultsCount: number = 0\n\n  getKeysCount() {\n    return Object.keys(this.rowsGroupsGlobal).length || 0\n  }\n\n  byYear: any\n  years: string[] = []\n\n  changeYear(year: string, years?: string[]): void {\n    localStorage.setItem('production-year', year)\n    this.router.navigate([this.main_route, year], { replaceUrl: true })\n  }\n\n  rowsGroupsGlobal: any\n  rowsGroupsDetail: any = {}\n\n\n  rollupData(): void {\n    this.byYear = this.data.classifyByIndex(this.data.productionProgramData, 13)\n    this.years = Object.keys(this.byYear)\n    const yearCache = localStorage.getItem('production-year')\n    if (yearCache && this.year != yearCache) this.router.navigate([this.main_route_slash, yearCache], { replaceUrl: true })\n    this.year = yearCache\n    if (this.years.indexOf(this.year) == -1) {\n      localStorage.setItem('production-year', this.years[0])\n      this.router.navigate([this.main_route_slash, this.years[0]], { replaceUrl: true })\n    } else {\n      this.rowsGroupsGlobal = this.data.classifyByIndex(this.data.productionProgramData.filter(dat => dat[13] == this.year), 0)\n      for (var group in this.rowsGroupsGlobal) {\n        this.rowsGroupsDetail[group] = this.data.classifyByIndex(this.rowsGroupsGlobal[group], 3)\n      }\n      this.resultsCount = Object.keys(this.rowsGroupsGlobal).length\n      // Tell the DOM it's ready to rock ’n’ roll !\n      setTimeout(() => this.ready = true)\n    }\n  }\n\n  goZone(ZoneID: string): void {\n    this.router.navigate([this.general_route, ZoneID], { relativeTo: this.route, replaceUrl: true })\n  }\n\n  goPlant(PlantID: string): void {\n    this.router.navigate([this.second_level_route, PlantID], { relativeTo: this.route, replaceUrl: true })\n  }\n\n  ready: boolean = false\n\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { DataService } from '@services/data.service';\nimport { swipeAnimation } from 'app/app.transitions';\n\n@Component({\n  selector: 'production-program-wrapper',\n  templateUrl: './wrapper.component.html',\n  styleUrls: ['./wrapper.component.scss'],\n  animations: [swipeAnimation],\n  host: {\n    '[@routerTransition]': 'getLevel()'\n  }\n})\nexport class WrapperComponent {\n\n  constructor(private data: DataService) { }\n\n  @ViewChild('o', { static: true }) outlet: RouterOutlet\n\n  getLevel() {\n    this.data.currentLevel = +this.outlet.activatedRouteData['level']\n    return this.outlet.activatedRouteData['level']\n  }\n\n}\n","<router-outlet #o=\"outlet\"></router-outlet>","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { DataService } from '@services/data.service';\n\n@Component({\n  selector: 'dip-quadro-circular-meters',\n  templateUrl: './quadro-circular-meters.component.html',\n  styleUrls: ['./quadro-circular-meters.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DipQuadroCircularMetersComponent {\n\n  constructor(\n    public data: DataService\n  ) { }\n\n\n  @Input('customer') set setCustomer(value: number) {\n    this.customer = isNaN(value) ? 0 : Math.abs(value)\n    this.clockwise_customer = value >= 0\n  }\n\n  @Input('plan') set setPlan(value: number) {\n    this.plan = isNaN(value) ? 0 : Math.abs(value)\n    this.clockwise_plan = value >= 0\n  }\n\n  @Input('total') set setTotal(value: number) {\n    this.total = isNaN(value) ? 0 : Math.abs(value)\n    this.clockwise_total = value >= 0\n  }\n\n  @Input('reserve') set setReserve(value: number) {\n    this.reserve = isNaN(value) ? 0 : Math.abs(value)\n    this.clockwise_reserve = value >= 0\n  }\n\n  @Input() customerValue: number = 0\n  @Input() planValue: number = 0\n  @Input() totalValue: number = 0\n  @Input() reserveValue: number = 0\n\n  clockwise_customer: boolean = false\n  clockwise_plan: boolean = false\n  clockwise_total: boolean = false\n  clockwise_reserve: boolean = false\n\n  customer: number = 0\n  plan: number = 0\n  total: number = 0\n  reserve: number = 0\n\n}\n","<div class=\"meter\">\n  <div class=\"container\" [matTooltip]=\"customerValue | toNumber\" matTooltipPosition=\"above\" matTooltipClass=\"customer\">\n    <div [ngClass]=\"{'negative': !clockwise_customer}\" class=\"percent cyan\">{{ customer }}%</div>\n    <round-progress [duration]=\"1000\" [animation]=\"'easeInOutCubic'\" [animationDelay]=\"200\" [max]=\"100\" [radius]=\"30\" [stroke]=\"5\" [current]=\"customer\" background=\"rgba(0, 172, 193, .2)\" [color]=\"data.lightTheme ? '#17687F' : '#00acc1'\"></round-progress>\n  </div>\n</div>\n<div class=\"meter\">\n  <div class=\"container\" [matTooltip]=\"planValue | toNumber\" matTooltipPosition=\"above\" matTooltipClass=\"plan\">\n    <div [ngClass]=\"{'negative': !clockwise_plan}\" class=\"percent\">{{ plan }}%</div>\n    <round-progress [duration]=\"1000\" [animation]=\"'easeInOutCubic'\" [animationDelay]=\"200\" [max]=\"100\" [radius]=\"30\" [stroke]=\"5\" [current]=\"plan\" background=\"rgba(255, 255, 255, .2)\" [color]=\"data.lightTheme ? 'grey' : '#fff'\"></round-progress>\n  </div>\n</div>\n<div class=\"meter\">\n  <div class=\"container\" [matTooltip]=\"totalValue | toNumber\" matTooltipPosition=\"above\" matTooltipClass=\"total\">\n    <div [ngClass]=\"{'negative': !clockwise_total}\" class=\"percent orange\">{{ total }}%</div>\n    <round-progress [duration]=\"1000\" [animation]=\"'easeInOutCubic'\" [animationDelay]=\"200\" [max]=\"100\" [radius]=\"30\" [stroke]=\"5\" [current]=\"total\" background=\"rgba(243, 18, 40, .2)\" [color]=\"data.lightTheme ? '#f2142c' : '#f2142c'\"></round-progress>\n  </div>\n</div>\n<div class=\"meter\">\n  <div class=\"container\" [matTooltip]=\"reserveValue | toNumber\" matTooltipPosition=\"above\" matTooltipClass=\"reserve\">\n    <div [ngClass]=\"{'negative': !clockwise_reserve}\" class=\"percent\">{{ reserve }}%</div>\n    <round-progress [duration]=\"1000\" [animation]=\"'easeInOutCubic'\" [animationDelay]=\"200\" [max]=\"100\" [radius]=\"30\" [stroke]=\"5\" [current]=\"reserve\" background=\"rgba(255, 255, 255, .2)\" [color]=\"data.lightTheme ? 'grey' : '#fff'\"></round-progress>\n  </div>\n</div>","<div class=\"overview\">\n  <div class=\"data-header\">\n    <div class=\"empty\"></div>\n    <div class=\"report-date\">{{ 'plandate' | translate }}: {{ plandate }}</div>\n  </div>\n  <header>\n    <div class=\"title\">\n      <!--<button (click)=\"changeYear(year, years)\" matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'change.year' | translate }}\" mat-button><mat-icon>today</mat-icon>{{ year }}</button>-->\n      <mat-form-field matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'change.year' | translate }}\" style=\"width: 70px; margin-left: 10px;\">\n        <mat-select ngDefaultControl [(ngModel)]=\"year\" (ngModelChange)=\"changeYear($event)\">\n          <mat-option *ngFor=\"let newYear of years\" [value]=\"newYear\">\n            {{ newYear }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"customer\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.customers' | translate }}\" style=\"display: inline-block;\">{{\n        'production_program.customer' | translate }}</div>\n    </div>\n    <div class=\"plan\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.plan' | translate }}\" style=\"display: inline-block;\">{{\n        'production_program.plan' | translate }}</div>\n    </div>\n    <div class=\"total\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.plan_unit' | translate }}\" style=\"display: inline-block;\">{{\n        'production_program.total' | translate }}</div>\n    </div>\n    <div class=\"reserve\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.reserved' | translate }}\" style=\"display: inline-block;\">\n        <span class=\"desktop\">{{ 'production_program.reserve' | translate }}</span>\n        <span class=\"mobile\">SR</span>\n      </div>\n    </div>\n  </header>\n  <div class=\"header-rows\">\n    <ng-container *ngIf=\"ZoneID != null && groupInfo\">\n      <div class=\"header-row total\">\n        <div class=\"title\">TOTAL</div>\n        <div class=\"customer\">{{ groupInfo.totalCustomer | toNumber }}</div>\n        <div class=\"plan\">{{ groupInfo.totalPlan | toNumber }}</div>\n        <div class=\"total\">\n          <div>{{ groupInfo.totalTotal | toNumber }}</div>\n          <div *ngIf=\"groupInfo.totalTotalDiff != 0\">{{ groupInfo.totalTotalDiff | toNumber }}</div>\n        </div>\n        <div class=\"reserve\">{{ groupInfo.totalReserve | toNumber }}</div>\n      </div>\n      <div class=\"header-row arrow zone\" (click)=\"return()\">\n        <div class=\"title\"><span matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'return.main' | translate }}\">{{\n            groupInfo.zoneRows[0][config.config.language == 'en' ? 2 : 1] }}</span></div>\n        <div class=\"customer\">{{ groupInfo.zoneCustomer | toNumber }}</div>\n        <div class=\"plan\">{{ groupInfo.zonePlan | toNumber }}</div>\n        <div class=\"total\">\n          <div>{{ groupInfo.zoneTotal | toNumber }}</div>\n          <div *ngIf=\"groupInfo.zoneTotalDiff != 0\">{{ groupInfo.zoneTotalDiff | toNumber:true }}</div>\n        </div>\n        <div class=\"reserve\">{{ groupInfo.zoneReserve | toNumber }}</div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"PlantID != null && groupInfo\">\n      <div class=\"header-row total\">\n        <div class=\"title\">{{ groupInfo.zoneRows[0][config.config.language == 'en' ? 2 : 1] }}</div>\n        <div class=\"customer\">{{ groupInfo.zoneCustomer | toNumber }}</div>\n        <div class=\"plan\">{{ groupInfo.zonePlan | toNumber }}</div>\n        <div class=\"total\">\n          <div>{{ groupInfo.zoneTotal | toNumber }}</div>\n          <div *ngIf=\"groupInfo.zoneTotalDiff != 0\">{{ groupInfo.zoneTotalDiff | toNumber:true }}</div>\n        </div>\n        <div class=\"reserve\">{{ groupInfo.zoneReserve | toNumber }}</div>\n      </div>\n      <div class=\"header-row arrow plant\" (click)=\"return()\">\n        <div class=\"title\"><span matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'return.main' | translate }}\">{{\n            groupInfo.plantRows[0][config.config.language == 'en' ? 7 : 6] }}</span></div>\n        <div class=\"customer\">{{ groupInfo.plantCustomer | toNumber }}</div>\n        <div class=\"plan\">{{ groupInfo.plantPlan | toNumber }}</div>\n        <div class=\"total\">\n          <div>{{ groupInfo.plantTotal | toNumber }}</div>\n          <div *ngIf=\"groupInfo.plantTotalDiff != 0\">{{ groupInfo.plantTotalDiff | toNumber:true }}</div>\n        </div>\n        <div class=\"reserve\">{{ groupInfo.plantReserve | toNumber }}</div>\n      </div>\n    </ng-container>\n  </div>\n  <dip-quadro-circular-meters [customer]=\"groupInfo.progress1 || 0\" [plan]=\"groupInfo.progress2 || 0\" [total]=\"groupInfo.progress3 || 0\"\n    [reserve]=\"groupInfo.progress4 || 0\" [customerValue]=\"groupInfo.progress1Value || 0\" [planValue]=\"groupInfo.progress2Value || 0\"\n    [totalValue]=\"groupInfo.progress3Value || 0\" [reserveValue]=\"groupInfo.progress4Value || 0\" *ngIf=\"ready && groupInfo\"></dip-quadro-circular-meters>\n  <div class=\"title-header\">\n    <div class=\"title\">{{ 'cities' | translate }}</div>\n  </div>\n  <div class=\"lvl2-row\" (click)=\"goProduct(RegionKey)\" *ngFor=\"let RegionKey of groupInfo?.regionKeys\">\n    <div class=\"title\">{{ groupInfo.regions[RegionKey][0][[config.config.language == 'en' ? 10 : 9]] }}</div>\n    <div matTooltipPosition=\"after\" class=\"customer cyan\">{{ data.sumByIndex(groupInfo.regions[RegionKey], 15) |\n      toNumber }}</div>\n    <div class=\"plan\">{{ data.sumByIndex(groupInfo.regions[RegionKey], 16) | toNumber }}</div>\n    <div class=\"total orange\">\n      <div>{{ data.sumByIndex(groupInfo.regions[RegionKey], 17) | toNumber }}</div>\n      <div *ngIf=\"data.sumByIndex(groupInfo.regions[RegionKey], 21) != 0\">{{\n        data.sumByIndex(groupInfo.regions[RegionKey], 21) | toNumber:true }}</div>\n    </div>\n    <div class=\"reserve\">{{ data.sumByIndex(groupInfo.regions[RegionKey], 22) | toNumber }}</div>\n  </div>\n  <div class=\"title-header\">\n    <div class=\"title\">{{ 'companies' | translate }}</div>\n  </div>\n  <div class=\"lvl2-row\" (click)=\"goRegion(ProductKey)\" *ngFor=\"let ProductKey of groupInfo?.productKeys\">\n    <div class=\"title\">{{ groupInfo.products[ProductKey][0][[config.config.language == 'en' ? 12 : 11] ]}}</div>\n    <div matTooltipPosition=\"after\" class=\"customer cyan\">{{ data.sumByIndex(groupInfo.products[ProductKey], 15) |\n      toNumber }}</div>\n    <div class=\"plan\">{{ data.sumByIndex(groupInfo.products[ProductKey], 16) | toNumber }}</div>\n    <div class=\"total orange\">\n      <div>{{ data.sumByIndex(groupInfo.products[ProductKey], 17) | toNumber }}</div>\n      <div *ngIf=\"data.sumByIndex(groupInfo.products[ProductKey], 21) != 0\">{{\n        data.sumByIndex(groupInfo.products[ProductKey], 21) | toNumber:true }}</div>\n    </div>\n    <div class=\"reserve\">{{ data.sumByIndex(groupInfo.products[ProductKey], 22) | toNumber }}</div>\n  </div>\n</div>","<div class=\"overview\">\n  <div class=\"data-header\">\n    <div class=\"empty\"></div>\n    <div class=\"report-date\">{{ 'plandate' | translate }}: {{ plandate }}</div>\n  </div>\n  <header>\n    <div class=\"title\">\n      <!--<button (click)=\"changeYear(year, years)\" matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'change.year' | translate }}\" mat-button><mat-icon>today</mat-icon>{{ year }}</button>-->\n      <mat-form-field matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'change.year' | translate }}\" style=\"width: 70px; margin-left: 10px;\">\n        <mat-select ngDefaultControl [(ngModel)]=\"year\" (ngModelChange)=\"changeYear($event)\">\n          <mat-option *ngFor=\"let newYear of years\" [value]=\"newYear\">\n            {{ newYear }}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"customer\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.customers' | translate }}\" style=\"display: inline-block;\">{{\n        'production_program.customer' | translate }}</div>\n    </div>\n    <div class=\"plan\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.plan' | translate }}\" style=\"display: inline-block;\">{{\n        'production_program.plan' | translate }}</div>\n    </div>\n    <div class=\"total\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.plan_unit' | translate }}\" style=\"display: inline-block;\">{{\n        'production_program.total' | translate }}</div>\n    </div>\n    <div class=\"reserve\">\n      <div matTooltipClass=\"above\" matTooltipPosition=\"above\" matTooltip=\"{{ 'belong_to.reserved' | translate }}\" style=\"display: inline-block;\">\n        <span class=\"desktop\">{{ 'production_program.reserve' | translate }}</span>\n        <span class=\"mobile\">SR</span>\n      </div>\n    </div>\n  </header>\n  <div class=\"header-rows\">\n    <ng-container *ngIf=\"ZoneID != null && groupInfo\">\n      <div class=\"header-row total\">\n        <div class=\"title\">TOTAL</div>\n        <div class=\"customer\">{{ groupInfo.totalCustomer | toNumber }}</div>\n        <div class=\"plan\">{{ groupInfo.totalPlan | toNumber }}</div>\n        <div class=\"total\">\n          <div>{{ groupInfo.totalTotal | toNumber }}</div>\n          <div *ngIf=\"groupInfo.totalTotalDiff != 0\">{{ groupInfo.totalTotalDiff | toNumber }}</div>\n        </div>\n        <div class=\"reserve\">{{ groupInfo.totalReserve | toNumber }}</div>\n      </div>\n      <div class=\"header-row arrow zone\" (click)=\"return()\">\n        <div class=\"title\"><span matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'return.main' | translate }}\">{{\n            groupInfo.zoneRows[0][config.config.language == 'en' ? 1 : 2].trim() }}</span></div>\n        <div class=\"customer\">{{ groupInfo.zoneCustomer | toNumber }}</div>\n        <div class=\"plan\">{{ groupInfo.zonePlan | toNumber }}</div>\n        <div class=\"total\">\n          <div>{{ groupInfo.zoneTotal | toNumber }}</div>\n          <div *ngIf=\"groupInfo.zoneTotalDiff != 0\">{{ groupInfo.zoneTotalDiff | toNumber:true }}</div>\n        </div>\n        <div class=\"reserve\">{{ groupInfo.zoneReserve | toNumber }}</div>\n      </div>\n    </ng-container>\n    <ng-container *ngIf=\"PlantID != null && groupInfo\">\n      <div class=\"header-row total\">\n        <div class=\"title\">{{ groupInfo.zoneRows[0][config.config.language == 'en' ? 1 : 2].trim() }}</div>\n        <div class=\"customer\">{{ groupInfo.zoneCustomer | toNumber }}</div>\n        <div class=\"plan\">{{ groupInfo.zonePlan | toNumber }}</div>\n        <div class=\"total\">\n          <div>{{ groupInfo.zoneTotal | toNumber }}</div>\n          <div *ngIf=\"groupInfo.zoneTotalDiff != 0\">{{ groupInfo.zoneTotalDiff | toNumber:true }}</div>\n        </div>\n        <div class=\"reserve\">{{ groupInfo.zoneReserve | toNumber }}</div>\n      </div>\n      <div class=\"header-row arrow plant lvl2\" (click)=\"returnToMain()\">\n        <div class=\"title\">{{ groupInfo.plantRows[0][config.config.language == 'en' ? 7 : 6].trim() }}</div>\n        <div class=\"customer\">{{ groupInfo.plantCustomer | toNumber }}</div>\n        <div class=\"plan\">{{ groupInfo.plantPlan | toNumber }}</div>\n        <div class=\"total\">\n          <div>{{ groupInfo.plantTotal | toNumber }}</div>\n          <div *ngIf=\"groupInfo.plantTotalDiff != 0\">{{ groupInfo.plantTotalDiff | toNumber:true }}</div>\n        </div>\n        <div class=\"reserve\">{{ groupInfo.plantReserve | toNumber }}</div>\n      </div>\n    </ng-container>\n    <div class=\"header-row arrow plant\" *ngIf=\"RegionID != null && groupInfo\" (click)=\"return()\">\n      <div class=\"title\"><span matTooltipClass=\"after\" matTooltipPosition=\"after\" matTooltip=\"{{ 'return.cities' | translate }}\">{{\n          groupInfo.productsPlain[0][config.config.language == 'en' ? 10 : 9].trim() }}</span></div>\n      <div class=\"customer\">{{ data.sumByIndex(groupInfo.productsPlain, 15) | toNumber }}</div>\n      <div class=\"plan\">{{ data.sumByIndex(groupInfo.productsPlain, 16) | toNumber }}</div>\n      <div class=\"total\">\n        <div>{{ data.sumByIndex(groupInfo.productsPlain, 17) | toNumber }}</div>\n        <div *ngIf=\"data.sumByIndex(groupInfo.productsPlain, 21) != 0\">{{ data.sumByIndex(groupInfo.productsPlain, 21) |\n          toNumber:true }}</div>\n      </div>\n      <div class=\"reserve\">{{ data.sumByIndex(groupInfo.productsPlain, 22) | toNumber }}</div>\n    </div>\n    <div class=\"header-row arrow plant\" *ngIf=\"ProductID != null && groupInfo\" (click)=\"return()\">\n      <div class=\"title\">{{ groupInfo.regionsPlain[0][config.config.language == 'en' ? 12 : 11].trim() }}</div>\n      <div class=\"customer\">{{ data.sumByIndex(groupInfo.regionsPlain, 15) | toNumber }}</div>\n      <div class=\"plan\">{{ data.sumByIndex(groupInfo.regionsPlain, 16) | toNumber }}</div>\n      <div class=\"total\">\n        <div>{{ data.sumByIndex(groupInfo.regionsPlain, 17) | toNumber }}</div>\n        <div *ngIf=\"data.sumByIndex(groupInfo.regionsPlain, 21) != 0\">{{ data.sumByIndex(groupInfo.regionsPlain, 21) |\n          toNumber:true }}</div>\n      </div>\n      <div class=\"reserve\">{{ data.sumByIndex(groupInfo.regionsPlain, 22) | toNumber }}</div>\n    </div>\n  </div>\n  <dip-quadro-circular-meters [customer]=\"groupInfo.progress1 || 0\" [plan]=\"groupInfo.progress2 || 0\" [total]=\"groupInfo.progress3 || 0\"\n    [reserve]=\"groupInfo.progress4 || 0\" [customerValue]=\"groupInfo.progress1Value || 0\" [planValue]=\"groupInfo.progress2Value || 0\"\n    [totalValue]=\"groupInfo.progress3Value || 0\" [reserveValue]=\"groupInfo.progress4Value || 0\" *ngIf=\"ready && groupInfo\"></dip-quadro-circular-meters>\n  <ng-container *ngIf=\"ProductID != null\">\n    <div class=\"title-header\">\n      <div class=\"title\">{{ 'cities' | translate }}</div>\n    </div>\n    <div class=\"lvl2-row\" (click)=\"goForRegion(RegionKey)\" *ngFor=\"let RegionKey of groupInfo?.regionKeys\">\n      <div class=\"title\">{{ groupInfo.regions[RegionKey][0][[config.config.language == 'en' ? 10 : 9]].trim() }}</div>\n      <div matTooltipPosition=\"after\" class=\"customer cyan\">{{ data.sumByIndex(groupInfo.regions[RegionKey], 15) |\n        toNumber }}</div>\n      <div class=\"plan\">{{ data.sumByIndex(groupInfo.regions[RegionKey], 16) | toNumber }}</div>\n      <div class=\"total orange\">\n        <div>{{ data.sumByIndex(groupInfo.regions[RegionKey], 17) | toNumber }}</div>\n        <div *ngIf=\"data.sumByIndex(groupInfo.regions[RegionKey], 21) != 0\">{{\n          data.sumByIndex(groupInfo.regions[RegionKey], 21) | toNumber:true }}</div>\n      </div>\n      <div class=\"reserve\">{{ data.sumByIndex(groupInfo.regions[RegionKey], 22) | toNumber }}</div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"RegionID != null\">\n    <div class=\"title-header\">\n      <div class=\"title\">{{ 'companies' | translate }}</div>\n    </div>\n    <div class=\"lvl2-row\" (click)=\"goForProduct(ProductKey)\" *ngFor=\"let ProductKey of groupInfo?.productKeys\">\n      <div class=\"title\">{{ groupInfo.products[ProductKey][0][[config.config.language == 'en' ? 12 : 11]].trim() }}</div>\n      <div matTooltipPosition=\"after\" class=\"customer cyan\">{{ data.sumByIndex(groupInfo.products[ProductKey], 15) |\n        toNumber }}</div>\n      <div class=\"plan\">{{ data.sumByIndex(groupInfo.products[ProductKey], 16) | toNumber }}</div>\n      <div class=\"total orange\">\n        <div>{{ data.sumByIndex(groupInfo.products[ProductKey], 17) | toNumber }}</div>\n        <div *ngIf=\"data.sumByIndex(groupInfo.products[ProductKey], 21) != 0\">{{\n          data.sumByIndex(groupInfo.products[ProductKey], 21) | toNumber:true }}</div>\n      </div>\n      <div class=\"reserve\">{{ data.sumByIndex(groupInfo.products[ProductKey], 22) | toNumber }}</div>\n    </div>\n  </ng-container>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule} from '@angular/router';\nimport { ProductionProgramMainComponent } from './components/production-program-main/production-program-main.component';\nimport { WrapperComponent } from './components/wrapper/wrapper.component';\nimport { GraphicComponent } from './components/graphic/graphic.component';\nimport { SharedModule } from '@modules/shared/shared.module';\nimport { ProductionProgramLvl2Component } from './components/production-program-lvl2/production-program-lvl2.component';\nimport { ProductionProgramLvl3Component } from './components/production-program-lvl3/production-program-lvl3.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: WrapperComponent,\n    children: [\n      {\n        path: '',\n        component: ProductionProgramMainComponent,\n        data: { level: 1 }\n      },\n      {\n        path: ':year',\n        component: ProductionProgramMainComponent,\n        data: { level: 1 }\n      },\n      {\n        path: ':year/:type/:id',\n        component: ProductionProgramLvl2Component,\n        data: { level: 2 }\n      },\n      {\n        path: ':year/:type/:id/:type2/:region_id',\n        component: ProductionProgramLvl3Component,\n        data: { level: 3 }\n      }\n    ]\n   }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SharedModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [\n    ProductionProgramMainComponent,\n    WrapperComponent,\n    GraphicComponent,\n    ProductionProgramLvl2Component,\n    ProductionProgramLvl3Component\n  ]\n})\nexport class ProductionProgramModule { }\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '@services/data.service';\nimport { ApiService } from '@services/api.service';\nimport { ConfigService } from '@services/config.service';\nimport { Title } from '@angular/platform-browser';\nimport * as moment from 'moment';\nimport { ReportTypes } from '@other/interfaces';\nimport { TranslateService } from '@ngx-translate/core';\nimport { getPlanDateWithMoment } from '@other/functions';\n\n@Component({\n  selector: 'production-program-lvl2',\n  templateUrl: './production-program-lvl2.component.html',\n  styleUrls: ['./production-program-lvl2.component.scss'],\n  host: {\n    '(swiperight)': 'data.goFrom(\"production_program\", $event)',\n    '(swipeleft)': 'data.goFrom(\"production_program\", $event)'\n  }\n})\nexport class ProductionProgramLvl2Component {\n\n  ZoneID: any = null\n  PlantID: any = null\n\n  plandate: string = ''\n\n  ready: boolean = false\n\n  // Names of the routes for each level\n  main_route: string = 'employees'\n  general_route: string = 'zone'\n  sub_level_a: string = 'city'\n  sub_level_b: string = 'company'  \n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public data: DataService,\n    private api: ApiService,\n    private config: ConfigService,\n    private router: Router,\n    private translate: TranslateService,\n    private title: Title\n  ) {\n    title.setTitle(this.config.config.appTitle + ' - ' + this.translate.instant('menu.production_program'))\n    // Show the loader while getting/loading the data\n    this.activatedRoute.paramMap.subscribe(params => {\n      this.year = params.get('year')\n      this.type = params.get('type')\n      this.id = params.get('id')\n      if (params.get('type') == this.general_route) {\n        this.ZoneID = params.get('id')\n      } else {\n        this.PlantID = params.get('id')\n      }\n      // If no Order Intake rows were found, get them\n      if (this.data.productionProgramData.length == 0) {\n        this.api.getSavedReportData(ReportTypes.ProductionProgram).subscribe(res => {\n          this.plandate = getPlanDateWithMoment(res[0][14], moment);\n          this.data.productionProgramData = res;\n          this.productionProgramData = res.filter(dat => dat[13] == this.year);\n          if (this.ZoneID != null) {\n            const tmp = this.data.productionProgramData.filter(item => item[0] == this.ZoneID)\n            this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n          } else {\n            const tmp = this.data.productionProgramData.filter(item => item[3] == this.PlantID)\n            this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n          }\n          try {\n            this.rollupData()\n          } catch (err) {\n            this.router.navigate([this.main_route], { replaceUrl: true })\n          }\n        })\n      } else {\n        this.plandate = getPlanDateWithMoment(this.data.productionProgramData[0][14], moment)\n        this.productionProgramData = this.data.productionProgramData.filter(dat => dat[13] == this.year)\n        this.years = Object.keys(this.data.classifyByIndex(this.data.productionProgramData, 13))\n        // Transform numeric values to real numeric values, also checking NaN or null\n        // DEPRECATED\n        /* this.productionProgramData.forEach((row, index, rows) => {\n          this.config.config.reports.trucks.columns.productionProgram.shouldBeNumber.forEach(i => {\n            rows[index][i] = isNaN(rows[index][i]) ? 0 : parseFloat(rows[index][i])\n          });\n        }) */\n        try {\n          this.rollupData()\n        } catch (err) {\n          this.router.navigate([this.main_route], { replaceUrl: true })\n        }\n      }\n    })\n  }\n\n  productionProgramData: any[][] = []\n\n  year: string = ''\n  type: string = ''\n  id: string = ''\n  years: string[] = []\n\n  groupInfo: any\n\n  changeYear(year: string, years?: string[]): void {\n    localStorage.setItem('production-year', year)\n    this.router.navigate([this.main_route, year, this.type, this.id], { replaceUrl: true })\n  }\n\n  rollupData(): void {\n    let rows\n    // Reduce rows depending on route, by Plant or by Zone\n    if (this.ZoneID != null) {\n      rows = this.data.classifyByIndex(this.productionProgramData, 0)[this.ZoneID]\n    } else {\n      rows = this.data.classifyByIndex(this.productionProgramData, 3)[this.PlantID]\n    }\n    // Gettings rows only for the zone selected\n    let zoneRows = this.productionProgramData.reduce((r, a) => {\n      r[a[0]] = r[a[0]] || []\n      r[a[0]].push(a)\n      return r\n    }, {})[rows[0][0]]\n    // Getting rows only for the plant selected\n    let plantRows = this.productionProgramData.reduce((r, a) => {\n      r[a[3]] = r[a[3]] || []\n      r[a[3]].push(a)\n      return r\n    }, {})[rows[0][3]]\n    // Collect data info for data headers\n    this.groupInfo = {\n      zone: this.ZoneID != null,\n      zoneRows: zoneRows,\n      plantRows: plantRows,\n      rowsPlain: rows,\n      zoneID: rows[0][0],\n      plantID: rows[0][3],\n      totalCustomer: this.data.sumByIndex(this.productionProgramData, 15),\n      totalPlan: this.data.sumByIndex(this.productionProgramData, 16),\n      totalTotal: this.data.sumByIndex(this.productionProgramData, 17),\n      totalTotalDiff: this.data.sumByIndex(this.productionProgramData, 21),\n      totalReserve: this.data.sumByIndex(this.productionProgramData, 22),\n      zoneTitle: rows[0][this.config.config.language == 'en' ? 1 : 2],\n      plantTitle: rows[0][this.config.config.language == 'en' ? 7 : 6],\n      zoneCustomer: this.data.sumByIndex(zoneRows, 15),\n      zonePlan: this.data.sumByIndex(zoneRows, 16),\n      zoneTotal: this.data.sumByIndex(zoneRows, 17),\n      zoneTotalDiff: this.data.sumByIndex(zoneRows, 21),\n      zoneReserve: this.data.sumByIndex(zoneRows, 22),\n      plantCustomer: this.data.sumByIndex(plantRows, 15),\n      plantPlan: this.data.sumByIndex(plantRows, 16),\n      plantTotal: this.data.sumByIndex(plantRows, 17),\n      plantTotalDiff: this.data.sumByIndex(plantRows, 21),\n      plantReserve: this.data.sumByIndex(plantRows, 22),\n      regions: this.data.classifyByIndex(rows, this.config.config.language == 'en' ? 10 : 9),\n      products: this.data.classifyByIndex(rows, this.config.config.language == 'en' ? 12 : 11)\n    }\n    this.title.setTitle(this.config.config.appTitle + ' - ' + this.translate.instant('menu.production_program') + ' - ' + (this.ZoneID != null ? this.groupInfo.zoneTitle : this.groupInfo.plantTitle))\n    this.groupInfo.regionKeys = Object.keys(this.groupInfo.regions).sort()\n    this.groupInfo.productKeys = Object.keys(this.groupInfo.products).sort()\n    this.groupInfo.progress1Value = this.ZoneID != null ? this.groupInfo.zoneCustomer : this.groupInfo.plantCustomer\n    this.groupInfo.progress2Value = this.ZoneID != null ? this.groupInfo.zonePlan : this.groupInfo.plantPlan\n    this.groupInfo.progress3Value = this.ZoneID != null ? this.groupInfo.zoneTotal : this.groupInfo.plantTotal\n    this.groupInfo.progress4Value = this.ZoneID != null ? this.groupInfo.zoneReserve : this.groupInfo.plantReserve\n    this.groupInfo.progress1 = this.ZoneID != null ?\n      this.percent(this.groupInfo.zoneCustomer, this.groupInfo.totalCustomer) :\n      this.percent(this.groupInfo.plantCustomer, this.groupInfo.zoneCustomer)\n    this.groupInfo.progress2 = this.ZoneID != null ?\n      this.percent(this.groupInfo.zonePlan, this.groupInfo.totalPlan) :\n      this.percent(this.groupInfo.plantPlan, this.groupInfo.zonePlan)\n    this.groupInfo.progress3 = this.ZoneID != null ?\n      this.percent(this.groupInfo.zoneTotal, this.groupInfo.totalTotal) :\n      this.percent(this.groupInfo.plantTotal, this.groupInfo.zoneTotal)\n    this.groupInfo.progress4 = this.ZoneID != null ?\n      this.percent(this.groupInfo.zoneReserve, this.groupInfo.totalReserve) :\n      this.percent(this.groupInfo.plantReserve, this.groupInfo.zoneReserve)\n    this.groupInfo = { ...this.groupInfo }\n    // Tell the DOM it's ready to rock ’n’ roll !\n    setTimeout(() => this.ready = true)\n  }\n\n  percent(part: number, total: number): number {\n    return parseInt(((part * 100) / total).toFixed(0))\n  }\n\n  return(): void {\n    this.router.navigate(['../../'], { relativeTo: this.activatedRoute, replaceUrl: true })\n  }\n\n  forward(): void {\n    if (this.data.lastTap2) {\n      if (this.data.lastTap2.type == this.sub_level_a) {\n        this.router.navigate([this.sub_level_a, this.data.lastTap2.key], { relativeTo: this.activatedRoute, replaceUrl: true })\n      } else {\n        this.router.navigate([this.sub_level_b, this.data.lastTap2.key], { relativeTo: this.activatedRoute, replaceUrl: true })\n      }\n    }\n  }\n\n  goProduct(ProductID): void {\n    this.data.lastTap = {\n      type: this.sub_level_a,\n      key: encodeURI(ProductID)\n    }\n    this.router.navigate([this.sub_level_a, ProductID], { relativeTo: this.activatedRoute, replaceUrl: true })\n  }\n\n  goRegion(RegionID): void {\n    this.data.lastTap = {\n      type: this.sub_level_b,\n      key: encodeURI(RegionID)\n    }\n    this.router.navigate([this.sub_level_b, RegionID], { relativeTo: this.activatedRoute, replaceUrl: true })\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '@services/data.service';\nimport { ApiService } from '@services/api.service';\nimport { ConfigService } from '@services/config.service';\nimport { Title } from '@angular/platform-browser';\nimport * as moment from 'moment'\nimport { ReportTypes } from '@other/interfaces';\nimport { TranslateService } from '@ngx-translate/core';\nimport { getPlanDateWithMoment } from '@other/functions';\n\n@Component({\n  selector: 'production-program-lvl3',\n  templateUrl: './production-program-lvl3.component.html',\n  styleUrls: ['./production-program-lvl3.component.scss'],\n  host: {\n    '(swiperight)': 'data.goFrom(\"production_program\", $event)',\n    '(swipeleft)': 'data.goFrom(\"production_program\", $event)'\n  }\n})\nexport class ProductionProgramLvl3Component {\n\n  ZoneID: any = null\n  PlantID: any = null\n\n  RegionID: any = null\n  ProductID: any = null\n\n  plandate: string = ''\n\n  ready: boolean = false\n\n    // Names of the routes for each level\n    main_route: string = 'employees'\n    second_level_route: string = 'region'\n    general_route: string = 'zone'\n    sub_level_a: string = 'city'\n    sub_level_b: string = 'company'  \n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    public data: DataService,\n    private api: ApiService,\n    private config: ConfigService,\n    private router: Router,\n    private translate: TranslateService,\n    private title: Title\n  ) {\n    (window as any).pp3 = this;\n    title.setTitle(this.config.config.appTitle + ' - ' + this.translate.instant('menu.production_program'))\n    // Show the loader while getting/loading the data\n    this.activatedRoute.paramMap.subscribe(params => {\n      this.year = params.get('year')\n      this.type = params.get('type')\n      this.type2 = params.get('type2')\n      this.region_id = decodeURI(params.get('region_id'))\n      this.id = params.get('id')\n      if (this.type == this.general_route) {\n        this.ZoneID = this.id\n      } else {\n        this.PlantID = this.id\n      }\n      if (this.type2 == this.sub_level_a) {\n        this.RegionID = decodeURI(this.region_id)\n        this.ProductID = null\n      } else {\n        this.ProductID = decodeURI(this.region_id)\n        this.RegionID = null\n      }\n      // If no Order Intake rows were found, get them\n      if (this.data.productionProgramData.length == 0) {\n        this.api.getSavedReportData(ReportTypes.ProductionProgram).subscribe(res => {\n          this.plandate = getPlanDateWithMoment(res[0][14], moment);\n          this.data.productionProgramData = res;\n          this.productionProgramData = res.filter(dat => dat[13] == this.year);\n          if (this.ZoneID != null) {\n            if (this.RegionID != null) {\n              const tmp = this.data.productionProgramData.filter(item => item[0] == this.ZoneID && item[this.config.config.language == 'en' ? 10 : 9] == this.RegionID)\n              this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n            } else {\n              const tmp = this.data.productionProgramData.filter(item => item[0] == this.ZoneID && item[this.config.config.language == 'en' ? 12 : 11] == this.ProductID)\n              this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n            }\n          } else {\n            if (this.RegionID != null) {\n              const tmp = this.data.productionProgramData.filter(item => item[3] == this.PlantID && item[this.config.config.language == 'en' ? 10 : 9] == this.RegionID)\n              this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n            } else {\n              const tmp = this.data.productionProgramData.filter(item => item[3] == this.PlantID && item[this.config.config.language == 'en' ? 12 : 11] == this.ProductID)\n              this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n            }\n          }\n          try {\n            this.rollupData()\n          } catch (err) {\n            this.router.navigate([this.main_route], { replaceUrl: true })\n          }\n        })\n      } else {\n        this.plandate = getPlanDateWithMoment(this.data.productionProgramData[0][14], moment)\n        this.productionProgramData = this.data.productionProgramData.filter(dat => dat[13] == this.year)\n        if (this.ZoneID != null) {\n          if (this.RegionID != null) {\n            const tmp = this.data.productionProgramData.filter(item => item[0] == this.ZoneID && item[this.config.config.language == 'en' ? 10 : 9] == this.RegionID)\n            this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n          } else {\n            const tmp = this.data.productionProgramData.filter(item => item[0] == this.ZoneID && item[this.config.config.language == 'en' ? 12 : 11] == this.ProductID)\n            this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n          }\n        } else {\n          if (this.RegionID != null) {\n            const tmp = this.data.productionProgramData.filter(item => item[3] == this.PlantID && item[this.config.config.language == 'en' ? 10 : 9] == this.RegionID)\n            this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n          } else {\n            const tmp = this.data.productionProgramData.filter(item => item[3] == this.PlantID && item[this.config.config.language == 'en' ? 12 : 11] == this.ProductID)\n            this.years = Object.keys(this.data.classifyByIndex(tmp, 13))\n          }\n        }\n        // Transform numeric values to real numeric values, also checking NaN or null\n        // DEPRECATED\n        /* this.productionProgramData.forEach((row, index, rows) => {\n          this.config.config.reports.trucks.columns.productionProgram.shouldBeNumber.forEach(i => {\n            rows[index][i] = isNaN(rows[index][i]) ? 0 : parseFloat(rows[index][i])\n          });\n        }) */\n        try {\n          this.rollupData()\n        } catch (err) {\n          this.router.navigate([this.main_route], { replaceUrl: true })\n        }\n      }\n    })\n  }\n\n  goForProduct(key): void {\n    this.router.navigate(['../../', this.sub_level_b, key], { relativeTo: this.activatedRoute, replaceUrl: true })\n  }\n\n  goForRegion(key): void {\n    this.router.navigate(['../../', this.sub_level_a, key], { relativeTo: this.activatedRoute, replaceUrl: true })\n  }\n\n  productionProgramData: any[][] = []\n\n  year: string = ''\n  type: string = ''\n  id: string = ''\n  type2: string = ''\n  region_id: string = ''\n  years: string[] = []\n\n  groupInfo: any\n\n  changeYear(year: string, years?: string[]): void {\n    localStorage.setItem('production-year', year)\n    this.router.navigate([this.main_route, year, this.type, this.id, this.type2, this.region_id], { replaceUrl: true })\n  }\n\n  rollupData(): void {\n    let rows\n    // Reduce rows depending on route, by Plant or by Zone\n    if (this.ZoneID != null) {\n      rows = this.data.classifyByIndex(this.productionProgramData, 0)[this.ZoneID]\n    } else {\n      rows = this.data.classifyByIndex(this.productionProgramData, 3)[this.PlantID]\n    }\n    // Gettings rows only for the zone selected\n    let zoneRows = this.productionProgramData.reduce((r, a) => {\n      r[a[0]] = r[a[0]] || []\n      r[a[0]].push(a)\n      return r\n    }, {})[rows[0][0]]\n    // Getting rows only for the plant selected\n    // If type is plant group by plant sub id\n    let reducedIndexForZoneLevel = 3;\n    let reducedSelector = rows[0][3];\n    if (this.type === this.general_route) {\n      if (this.ProductID != null) {\n        reducedIndexForZoneLevel = this.config.config.language === 'en' ? 12 : 11;\n      } else {\n        reducedIndexForZoneLevel = this.config.config.language === 'en' ? 10 : 9;\n      }\n      reducedSelector = this.region_id;\n    }\n    let plantRows = rows.reduce((r, a) => {\n      r[a[reducedIndexForZoneLevel]] = r[a[reducedIndexForZoneLevel]] || [];\n      r[a[reducedIndexForZoneLevel]].push(a);\n      return r;\n    }, {})[reducedSelector];\n    // Collect data info for data headers\n    this.groupInfo = {\n      zone: this.ZoneID != null,\n      zoneRows: zoneRows,\n      plantRows: plantRows,\n      rowsPlain: rows,\n      zoneID: rows[0][0],\n      plantID: rows[0][3],\n      totalCustomer: this.data.sumByIndex(this.productionProgramData, 15),\n      totalPlan: this.data.sumByIndex(this.productionProgramData, 16),\n      totalTotal: this.data.sumByIndex(this.productionProgramData, 17),\n      totalTotalDiff: this.data.sumByIndex(this.productionProgramData, 21),\n      totalReserve: this.data.sumByIndex(this.productionProgramData, 22),\n      zoneTitle: rows[0][this.config.config.language == 'en' ? 1 : 2],\n      plantTitle: rows[0][this.config.config.language == 'en' ? 7 : 6],\n      zoneCustomer: this.data.sumByIndex(zoneRows, 15),\n      zonePlan: this.data.sumByIndex(zoneRows, 16),\n      zoneTotal: this.data.sumByIndex(zoneRows, 17),\n      zoneTotalDiff: this.data.sumByIndex(zoneRows, 21),\n      zoneReserve: this.data.sumByIndex(zoneRows, 22),\n      plantCustomer: this.data.sumByIndex(plantRows, 15),\n      plantPlan: this.data.sumByIndex(plantRows, 16),\n      plantTotal: this.data.sumByIndex(plantRows, 17),\n      plantTotalDiff: this.data.sumByIndex(plantRows, 21),\n      plantReserve: this.data.sumByIndex(plantRows, 22),\n      productsPlain: plantRows.filter(item => item[this.config.config.language == 'en' ? 10 : 9] == this.region_id),\n      regionsPlain: plantRows.filter(item => item[this.config.config.language == 'en' ? 12 : 11] == this.region_id)\n    }\n    if (this.RegionID != null && this.groupInfo.productsPlain.length == 0) {\n      this.router.navigate(['../../'], { relativeTo: this.activatedRoute, replaceUrl: true })\n    }\n    if (this.ProductID != null && this.groupInfo.regionsPlain.length == 0) {\n      this.router.navigate(['../../'], { relativeTo: this.activatedRoute, replaceUrl: true })\n    }\n    if (this.RegionID != null) {\n      this.groupInfo.products = this.data.classifyByIndex(this.groupInfo.productsPlain, this.config.config.language == 'en' ? 12 : 11)\n      this.groupInfo.productKeys = Object.keys(this.groupInfo.products).sort()\n    } else {\n      this.groupInfo.regions = this.data.classifyByIndex(this.groupInfo.regionsPlain, this.config.config.language == 'en' ? 10 : 9)\n      this.groupInfo.regionKeys = Object.keys(this.groupInfo.regions).sort()\n    }\n    this.title.setTitle(this.config.config.appTitle + ' - ' + this.translate.instant('menu.production_program') + ' - ' + (this.ZoneID != null ? this.groupInfo.zoneTitle : this.groupInfo.plantTitle) + ' - ' +\n      (this.RegionID != null ? this.RegionID : this.ProductID))\n    this.groupInfo.progress1Value = this.RegionID != null ? this.data.sumByIndex(this.groupInfo.productsPlain, 15) : this.data.sumByIndex(this.groupInfo.regionsPlain, 15)\n    this.groupInfo.progress2Value = this.RegionID != null ? this.data.sumByIndex(this.groupInfo.productsPlain, 16) : this.data.sumByIndex(this.groupInfo.regionsPlain, 16)\n    this.groupInfo.progress3Value = this.RegionID != null ? this.data.sumByIndex(this.groupInfo.productsPlain, 17) : this.data.sumByIndex(this.groupInfo.regionsPlain, 17)\n    this.groupInfo.progress4Value = this.RegionID != null ? this.data.sumByIndex(this.groupInfo.productsPlain, 22) : this.data.sumByIndex(this.groupInfo.regionsPlain, 22)\n    this.groupInfo.progress1 = this.RegionID != null ?\n      this.percent(this.data.sumByIndex(this.groupInfo.productsPlain, 15), this.type == this.second_level_route ? this.data.sumByIndex(plantRows, 15): this.groupInfo.zoneCustomer) :\n      this.percent(this.data.sumByIndex(this.groupInfo.regionsPlain, 15), this.type == this.second_level_route ? this.data.sumByIndex(plantRows, 15): this.groupInfo.zoneCustomer)\n    this.groupInfo.progress2 = this.RegionID != null ?\n      this.percent(this.data.sumByIndex(this.groupInfo.productsPlain, 16), this.type == this.second_level_route ? this.data.sumByIndex(plantRows, 16): this.groupInfo.zonePlan) :\n      this.percent(this.data.sumByIndex(this.groupInfo.regionsPlain, 16), this.type == this.second_level_route ? this.data.sumByIndex(plantRows, 16): this.groupInfo.zonePlan)\n    this.groupInfo.progress3 = this.RegionID != null ?\n      this.percent(this.data.sumByIndex(this.groupInfo.productsPlain, 17), this.type == this.second_level_route ? this.data.sumByIndex(plantRows, 17): this.groupInfo.zoneTotal) :\n      this.percent(this.data.sumByIndex(this.groupInfo.regionsPlain, 17), this.type == this.second_level_route ? this.data.sumByIndex(plantRows, 17): this.groupInfo.zoneTotal)\n    this.groupInfo.progress4 = this.RegionID != null ?\n      this.percent(this.data.sumByIndex(this.groupInfo.productsPlain, 22), this.type == this.second_level_route ? this.data.sumByIndex(plantRows, 22): this.groupInfo.zoneReserve) :\n      this.percent(this.data.sumByIndex(this.groupInfo.regionsPlain, 22), this.type == this.second_level_route ? this.data.sumByIndex(plantRows, 22): this.groupInfo.zoneReserve)\n    this.groupInfo = { ...this.groupInfo }\n    // Tell the DOM it's ready to rock ’n’ roll !\n    setTimeout(() => this.ready = true)\n  }\n\n  percent(part: number, total: number): number {\n    return parseInt(((part * 100) / total).toFixed(0))\n  }\n\n  return(): void {\n    this.router.navigate(['../../'], { relativeTo: this.activatedRoute, replaceUrl: true })\n  }\n\n  returnToMain(): void {\n    this.router.navigate(['../../../../'], { relativeTo: this.activatedRoute, replaceUrl: true })\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SelectSnapshot } from '@ngxs-labs/select-snapshot';\nimport { ILanguage } from '@other/interfaces';\nimport { ConfigState } from '@store/config.state';\n\n@Pipe({\n  name: 'toNumber'\n})\nexport class NumberPipe implements PipeTransform {\n\n  @SelectSnapshot(ConfigState.GetLanguage) language: ILanguage;\n\n  transform(value: number, sign: boolean = false, comma: boolean = true): string {\n    return ToNumberFn(value, sign, comma, this.language);\n  }\n\n}\n\nexport function ToNumberFn(value: number, sign: boolean = false, comma: boolean = true, language: string = 'en') {\n  if (isNaN(value)) {\n    return '-';\n  }\n  value = Math.round(value);\n  let ultimate: string\n  if (value == 0) return '0'\n  if (value > 0) {\n    if (sign) {\n      ultimate = '+ ' + parseInt(Math.abs(value).toFixed(0), 10).toLocaleString(language);\n    } else {\n      if (value < 0) {\n        ultimate = '- ' + parseInt(Math.abs(value).toFixed(0), 10).toLocaleString(language);\n      } else {\n        ultimate = parseInt(Math.abs(value).toFixed(0), 10).toLocaleString(language);\n      }\n    }\n  } else {\n    if (sign) {\n      ultimate = '- ' + parseInt(Math.abs(value).toFixed(0), 10).toLocaleString(language);\n    } else {\n      if (value < 0) {\n        ultimate = '- ' + parseInt(Math.abs(value).toFixed(0), 10).toLocaleString(language);\n      } else {\n        ultimate = parseInt(Math.abs(value).toFixed(0), 10).toLocaleString(language);\n      }\n    }\n  }\n  if (comma) {\n    return ultimate;\n  } else {\n    return ultimate.replace(/[,.]/g, '');\n  }\n}\n"]}